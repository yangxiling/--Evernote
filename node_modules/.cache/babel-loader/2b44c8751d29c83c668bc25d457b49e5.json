{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/yl/Documents/GitHub/MyProject/evernote/src/App.js\";\nimport React, { Component } from 'react';\nimport 'github-markdown-css';\nimport 'normalize.css';\nimport marked from 'marked';\nimport cx from 'classnames';\nimport Swal from 'sweetalert2';\nimport axios from 'axios';\nimport dateUtil from './utils/date';\nimport request from './utils/request';\nimport './App.scss';\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      notebooks: [],\n      currentBookIndex: 0,\n      notes: [],\n      currentNote: null\n    };\n  }\n\n  componentDidMount() {\n    //渲染 notebooks 列表\n    // axios.get('http://localhost:3100/notebooks').then(res => {\n    //   this.setState({ notebooks: res.data });\n    //   let book = res.data[this.state.currentBookIndex];\n    //   this.loadNotes(book.id);\n    // })\n    document.title = '实战Evernote';\n    window.addEventListener('beforeunload', () => {\n      let data = {\n        currentBookIndex: this.state.currentBookIndex,\n        currentNoteId: this.state.currentNote ? this.state.currentNote.id : null\n      };\n      localStorage.setItem('evernoteEditData', JSON.stringify(data));\n    });\n    var json = localStorage.getItem('evernoteEditData');\n\n    if (json) {\n      var data = JSON.parse(json);\n      this.setState({\n        currentBookIndex: data.currentBookIndex\n      });\n    }\n\n    console.log(data);\n    this.loadNotebooks(data);\n  }\n\n  render() {\n    let notebooks = this.state.notebooks;\n    let notes = this.state.notes;\n    let currentNote = this.state.currentNote;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"app\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"sidebar\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"header\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"button adder\",\n            onClick: () => this.addNote(),\n            children: [/*#__PURE__*/_jsxDEV(\"i\", {\n              className: \"iconfont icon-add\",\n              children: \" \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 71,\n              columnNumber: 7\n            }, this), \"\\u65B0\\u5EFA\\u7B14\\u8BB0 \"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 7\n          }, this), \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"body\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"notebooks\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"header has-icon\",\n              children: [/*#__PURE__*/_jsxDEV(\"i\", {\n                className: \"iconfont icon-books\",\n                children: \" \"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 83,\n                columnNumber: 7\n              }, this), \"\\u7B14\\u8BB0\\u672C \"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 81,\n              columnNumber: 7\n            }, this), \" \", /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"body\",\n              children: [/*#__PURE__*/_jsxDEV(\"ul\", {\n                className: \"nodebooks-list\",\n                children: [\" \", notebooks.map((notebook, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n                  className: cx('notebook-item', {\n                    active: this.state.currentBookIndex === index\n                  }) // className={'notebook-item '+(this.state.currentBookIndex === index?'active':'') }\n                  ,\n                  onClick: () => this.loadNotes(index),\n                  children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"title has-icon\",\n                    children: [/*#__PURE__*/_jsxDEV(\"i\", {\n                      className: \"iconfont icon-book\",\n                      children: \" \"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 105,\n                      columnNumber: 11\n                    }, this), \" \", notebook.name, \" \"]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 103,\n                    columnNumber: 11\n                  }, this), \" \", /*#__PURE__*/_jsxDEV(\"button\", {\n                    className: \"button trash\",\n                    children: [\" \", /*#__PURE__*/_jsxDEV(\"i\", {\n                      className: \"iconfont icon-trash\",\n                      children: \" \"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 110,\n                      columnNumber: 47\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 109,\n                    columnNumber: 17\n                  }, this)]\n                }, notebook.id, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 90,\n                  columnNumber: 46\n                }, this)), \" \"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 88,\n                columnNumber: 7\n              }, this), \" \"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 86,\n              columnNumber: 13\n            }, this), \" \"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 7\n          }, this), \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 7\n        }, this), \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"notes-panel\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"header\",\n          children: \" \\u8BFB\\u4E66\\u7B14\\u8BB0 \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 7\n        }, this), \" \", /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"body\",\n          children: [/*#__PURE__*/_jsxDEV(\"ul\", {\n            className: \"notes-list\",\n            children: [\" \", notes.map(note => /*#__PURE__*/_jsxDEV(\"li\", {\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: cx('note-brief', {\n                  active: currentNote && currentNote.id === note.id\n                }),\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"box\",\n                  onClick: () => this.loadNote(note.id),\n                  children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"header\",\n                    children: [\" \", note.title, \" \"]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 143,\n                    columnNumber: 11\n                  }, this), \" \", /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"body\",\n                    children: [\" \", getBrief(note.body), \" \"]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 146,\n                    columnNumber: 21\n                  }, this), \" \"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 138,\n                  columnNumber: 11\n                }, this), \" \", /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"footer\",\n                  children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"datetime\",\n                    children: [\" \", note.datetime.toISOString(), \" \"]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 152,\n                    columnNumber: 11\n                  }, this), \" \", /*#__PURE__*/_jsxDEV(\"button\", {\n                    className: \"trash button\",\n                    onClick: () => this.requestDeleteNote(note.id),\n                    children: [/*#__PURE__*/_jsxDEV(\"i\", {\n                      className: \"iconfont icon-trash\",\n                      children: \" \"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 161,\n                      columnNumber: 11\n                    }, this), \" \"]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 156,\n                    columnNumber: 17\n                  }, this), \" \"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 150,\n                  columnNumber: 17\n                }, this), \" \"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 132,\n                columnNumber: 11\n              }, this), \" \"]\n            }, note.id, true, {\n              fileName: _jsxFileName,\n              lineNumber: 128,\n              columnNumber: 31\n            }, this)), \" \"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 126,\n            columnNumber: 7\n          }, this), \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 47\n        }, this), \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 7\n      }, this), \" \", currentNote ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"note-panel\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"header\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"category has-icon\",\n            children: [/*#__PURE__*/_jsxDEV(\"i\", {\n              className: \"iconfont icon-notebook\",\n              children: \" \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 179,\n              columnNumber: 11\n            }, this), \"\\u8BFB\\u4E66\\u7B14\\u8BB03\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 177,\n            columnNumber: 11\n          }, this), \" \", /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"title\",\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              value: currentNote.title || '',\n              onChange: e => this.updateNote('title', e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 185,\n              columnNumber: 11\n            }, this), \" \"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 183,\n            columnNumber: 17\n          }, this), \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 175,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"body\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"editor\",\n            children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n              className: \"textrea\",\n              value: currentNote.body,\n              onChange: e => this.updateNote('body', e.target.value),\n              children: \" \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 201,\n              columnNumber: 11\n            }, this), \" \", /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"preview\",\n              children: \" \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 208,\n              columnNumber: 28\n            }, this), \" \"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 199,\n            columnNumber: 11\n          }, this), \" \", /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"preview markdown-body\",\n            children: [\" \", \" \"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 210,\n            columnNumber: 17\n          }, this), \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 197,\n          columnNumber: 9\n        }, this), \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 173,\n        columnNumber: 11\n      }, this) : null, \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 14\n    }, this);\n  }\n\n  handleEditNote(id) {\n    axios.get('http://localhost:3100/notes' + id).then(res => {\n      this.setState({\n        currentNote: res.data\n      });\n    });\n  }\n\n  updateNote(field, value) {\n    let note = this.state.currentNote;\n    note[field] = value;\n    console.log(note);\n    this.setState({\n      currentNote: note\n    }); // axios.post('http://localhost:3100/notes',currentNote)\n  } //添加新笔记\n\n\n  addNote() {\n    let book = this.state.notebooks[this.state.currentBookIndex];\n    let note = {\n      title: '新建笔记',\n      body: '',\n      datetime: new Date().toISOString(),\n      bookId: book.id\n    };\n    axios.post('http://localhost:3100/notes', note).then(this.reloadNotes(book.id));\n  } //渲染noteBooks列表\n\n\n  handleBookSelect(index) {\n    this.setState({\n      currentBookIndex: index\n    });\n    var book = this.state.notebooks[index]; //从后台拉取数据\n\n    this.loadNotes(book.id);\n  } //获取笔记本列表\n\n\n  loadNotebooks(editData) {\n    editData = editData || {};\n    request('/notebooks/').then(notebooks => {\n      this.setState({\n        notebooks: notebooks\n      }, () => {\n        var bookIndex = editData.currentBookIndex || 0;\n        this.loadNotes(bookIndex); // if(editData.currentNoteId){\n        //   this.loadNote(editData.currentNoteId)\n        // }\n      });\n    });\n  } //渲染notes列表\n\n\n  loadNotes(id) {\n    axios.get('http://localhost:3100/notes?bookId=' + id).then(note => {\n      // console.log(note);\n      this.setState({\n        notes: note.data\n      });\n    });\n  }\n\n  reloadNotes() {\n    let book = this.state.notebooks[this.state.currentBookIndex];\n    this.loadNotes(book.id);\n  }\n\n  loadNote(id) {// request('/notes/' + id).then(\n    //   note=>this.setState({ currentNote: note })\n    // )\n  }\n\n  requestDeleteNote() {}\n\n}\n\nexport default App;\n\nfunction getBrief(body) {\n  body = body || '';\n  return body.length > 100 ? body.substr(0, 70) + '...' : body;\n}","map":{"version":3,"sources":["/Users/yl/Documents/GitHub/MyProject/evernote/src/App.js"],"names":["React","Component","marked","cx","Swal","axios","dateUtil","request","App","constructor","props","state","notebooks","currentBookIndex","notes","currentNote","componentDidMount","document","title","window","addEventListener","data","currentNoteId","id","localStorage","setItem","JSON","stringify","json","getItem","parse","setState","console","log","loadNotebooks","render","addNote","map","notebook","index","active","loadNotes","name","note","loadNote","getBrief","body","datetime","toISOString","requestDeleteNote","e","updateNote","target","value","handleEditNote","get","then","res","field","book","Date","bookId","post","reloadNotes","handleBookSelect","editData","bookIndex","length","substr"],"mappings":"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","sourcesContent":["import React, {\n  Component\n} from 'react';\nimport 'github-markdown-css';\nimport 'normalize.css';\nimport marked from 'marked';\nimport cx from 'classnames';\nimport Swal from 'sweetalert2';\nimport axios from 'axios';\nimport dateUtil from './utils/date';\nimport request from './utils/request';\nimport './App.scss';\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      notebooks: [],\n      currentBookIndex: 0,\n\n      notes: [],\n\n      currentNote: null\n    }\n  }\n\n  componentDidMount() {\n    //渲染 notebooks 列表\n    // axios.get('http://localhost:3100/notebooks').then(res => {\n    //   this.setState({ notebooks: res.data });\n\n    //   let book = res.data[this.state.currentBookIndex];\n    //   this.loadNotes(book.id);\n    // })\n\n    document.title = '实战Evernote';\n    window.addEventListener('beforeunload', () => {\n      let data = {\n        currentBookIndex: this.state.currentBookIndex,\n        currentNoteId: this.state.currentNote ? this.state.currentNote.id : null\n      }\n      localStorage.setItem('evernoteEditData', JSON.stringify(data));\n    });\n\n    var json = localStorage.getItem('evernoteEditData')\n    if (json) {\n      var data = JSON.parse(json);\n      this.setState({\n        currentBookIndex: data.currentBookIndex\n      })\n    }\n    console.log(data)\n    this.loadNotebooks(data);\n  }\n\n  render() {\n    let notebooks = this.state.notebooks;\n    let notes = this.state.notes;\n    let currentNote = this.state.currentNote;\n    return ( <\n      div className = \"app\" >\n      <\n      div className = \"sidebar\" >\n      <\n      div className = \"header\" >\n      <\n      button className = \"button adder\"\n      onClick = {\n        () => this.addNote()\n      } >\n      <\n      i className = \"iconfont icon-add\" > < /i>\n      新建笔记 <\n      /button> <\n      /div>\n\n      <\n      div className = \"body\" >\n      <\n      div className = \"notebooks\" >\n      <\n      div className = \"header has-icon\" >\n      <\n      i className = \"iconfont icon-books\" > < /i>\n      笔记本 <\n      /div> <\n      div className = \"body\" >\n      <\n      ul className = \"nodebooks-list\" > {\n        notebooks.map((notebook, index) => ( <\n          li key = {\n            notebook.id\n          }\n          className = {\n            cx('notebook-item', {\n              active: this.state.currentBookIndex === index\n            })\n          }\n          // className={'notebook-item '+(this.state.currentBookIndex === index?'active':'') }\n          onClick = {\n            () => this.loadNotes(index)\n          } >\n          <\n          div className = \"title has-icon\" >\n          <\n          i className = \"iconfont icon-book\" > < /i> {\n            notebook.name\n          } <\n          /div> <\n          button className = \"button trash\" > < i className = \"iconfont icon-trash\" > < /i></button >\n          <\n          /li>\n        ))\n      } <\n      /ul> <\n      /div> <\n      /div> <\n      /div> <\n      /div>\n\n      <\n      div className = \"notes-panel\" >\n      <\n      div className = \"header\" > 读书笔记 < /div> <\n      div className = \"body\" >\n      <\n      ul className = \"notes-list\" > {\n        notes.map((note) => ( <\n          li key = {\n            note.id\n          } >\n          <\n          div className = {\n            cx('note-brief', {\n              active: currentNote && currentNote.id === note.id\n            })\n          } >\n          <\n          div className = \"box\"\n          onClick = {\n            () => this.loadNote(note.id)\n          } >\n          <\n          div className = \"header\" > {\n            note.title\n          } < /div> <\n          div className = \"body\" > {\n            getBrief(note.body)\n          } < /div> <\n          /div> <\n          div className = \"footer\" >\n          <\n          div className = \"datetime\" > {\n            note.datetime.toISOString()\n          } <\n          /div> <\n          button className = \"trash button\"\n          onClick = {\n            () => this.requestDeleteNote(note.id)\n          } >\n          <\n          i className = \"iconfont icon-trash\" > < /i> <\n          /button> <\n          /div> <\n          /div> <\n          /li>\n        ))\n      } <\n      /ul> <\n      /div> <\n      /div> {\n        currentNote ?\n          <\n          div className = \"note-panel\" >\n          <\n          div className = \"header\" >\n          <\n          div className = \"category has-icon\" >\n          <\n          i className = \"iconfont icon-notebook\" > < /i>\n        读书笔记3\n          <\n          /div> <\n          div className = \"title\" >\n          <\n          input type = \"text\"\n        value = {\n          currentNote.title || ''\n        }\n        onChange = {\n          e => this.updateNote('title', e.target.value)\n        }\n        /> <\n        /div> <\n        /div>\n\n        <\n        div className = \"body\" >\n          <\n          div className = \"editor\" >\n          <\n          textarea className = \"textrea\"\n        value = {\n          currentNote.body\n        }\n        onChange = {\n            (e) => this.updateNote('body', e.target.value)\n          } > < /textarea> <\n          div className = \"preview\" > < /div> <\n          /div> <\n          div className = \"preview markdown-body\" > {\n            /* <div dangerouslySetInnerHTML={{ __html: marked(currentNote.body) }}></div> */ } <\n          /div> <\n          /div> <\n          /div> : null\n      } <\n      /div>\n    );\n  }\n  handleEditNote(id) {\n    axios.get('http://localhost:3100/notes' + id).then(\n      res => {\n        this.setState({\n          currentNote: res.data\n        })\n      }\n    )\n  }\n  updateNote(field, value) {\n    let note = this.state.currentNote;\n    note[field] = value;\n    console.log(note)\n    this.setState({\n      currentNote: note\n    })\n    // axios.post('http://localhost:3100/notes',currentNote)\n  }\n  //添加新笔记\n  addNote() {\n    let book = this.state.notebooks[this.state.currentBookIndex];\n    let note = {\n      title: '新建笔记',\n      body: '',\n      datetime: new Date().toISOString(),\n      bookId: book.id\n    }\n    axios.post('http://localhost:3100/notes', note).then(\n      this.reloadNotes(book.id))\n  }\n  //渲染noteBooks列表\n  handleBookSelect(index) {\n    this.setState({\n      currentBookIndex: index\n    });\n    var book = this.state.notebooks[index];\n    //从后台拉取数据\n    this.loadNotes(book.id)\n  }\n  //获取笔记本列表\n  loadNotebooks(editData) {\n    editData = editData || {};\n    request('/notebooks/').then(notebooks => {\n\n      this.setState({\n        notebooks: notebooks\n      }, () => {\n        var bookIndex = editData.currentBookIndex || 0;\n        this.loadNotes(bookIndex);\n        // if(editData.currentNoteId){\n        //   this.loadNote(editData.currentNoteId)\n        // }\n      })\n    })\n  }\n\n  //渲染notes列表\n  loadNotes(id) {\n    axios.get('http://localhost:3100/notes?bookId=' + id).then(\n      note => {\n        // console.log(note);\n        this.setState({\n          notes: note.data\n        });\n      })\n  }\n  reloadNotes() {\n    let book = this.state.notebooks[this.state.currentBookIndex];\n    this.loadNotes(book.id)\n  }\n  loadNote(id) {\n    // request('/notes/' + id).then(\n    //   note=>this.setState({ currentNote: note })\n    // )\n  }\n  requestDeleteNote() {}\n}\nexport default App;\n\nfunction getBrief(body) {\n  body = body || '';\n  return body.length > 100 ? body.substr(0, 70) + '...' : body;\n}"]},"metadata":{},"sourceType":"module"}